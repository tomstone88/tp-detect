import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SharedGalleries } from "../operationsInterfaces";
import { ComputeManagementClient } from "../computeManagementClient";
import { SharedGallery, SharedGalleriesListOptionalParams, SharedGalleriesGetOptionalParams, SharedGalleriesGetResponse } from "../models";
/** Class containing SharedGalleries operations. */
export declare class SharedGalleriesImpl implements SharedGalleries {
    private readonly client;
    /**
     * Initialize a new instance of the class SharedGalleries class.
     * @param client Reference to the service client
     */
    constructor(client: ComputeManagementClient);
    /**
     * List shared galleries by subscription id or tenant id.
     * @param location Resource location.
     * @param options The options parameters.
     */
    list(location: string, options?: SharedGalleriesListOptionalParams): PagedAsyncIterableIterator<SharedGallery>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List shared galleries by subscription id or tenant id.
     * @param location Resource location.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get a shared gallery by subscription id or tenant id.
     * @param location Resource location.
     * @param galleryUniqueName The unique name of the Shared Gallery.
     * @param options The options parameters.
     */
    get(location: string, galleryUniqueName: string, options?: SharedGalleriesGetOptionalParams): Promise<SharedGalleriesGetResponse>;
    /**
     * ListNext
     * @param location Resource location.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=sharedGalleries.d.ts.map