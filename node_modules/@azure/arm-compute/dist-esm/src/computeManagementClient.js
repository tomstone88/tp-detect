/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as coreRestPipeline from "@azure/core-rest-pipeline";
import { OperationsImpl, UsageOperationsImpl, VirtualMachineSizesImpl, VirtualMachineScaleSetsImpl, VirtualMachineScaleSetExtensionsImpl, VirtualMachineScaleSetRollingUpgradesImpl, VirtualMachineScaleSetVMExtensionsImpl, VirtualMachineScaleSetVMsImpl, VirtualMachineExtensionsImpl, VirtualMachinesImpl, VirtualMachineImagesImpl, VirtualMachineImagesEdgeZoneImpl, VirtualMachineExtensionImagesImpl, AvailabilitySetsImpl, ProximityPlacementGroupsImpl, DedicatedHostGroupsImpl, DedicatedHostsImpl, SshPublicKeysImpl, ImagesImpl, RestorePointCollectionsImpl, RestorePointsImpl, CapacityReservationGroupsImpl, CapacityReservationsImpl, LogAnalyticsImpl, VirtualMachineRunCommandsImpl, VirtualMachineScaleSetVMRunCommandsImpl, DisksImpl, DiskAccessesImpl, DiskEncryptionSetsImpl, DiskRestorePointOperationsImpl, SnapshotsImpl, ResourceSkusImpl, GalleriesImpl, GalleryImagesImpl, GalleryImageVersionsImpl, GalleryApplicationsImpl, GalleryApplicationVersionsImpl, GallerySharingProfileImpl, SharedGalleriesImpl, SharedGalleryImagesImpl, SharedGalleryImageVersionsImpl, CommunityGalleriesImpl, CommunityGalleryImagesImpl, CommunityGalleryImageVersionsImpl, CloudServiceRoleInstancesImpl, CloudServiceRolesImpl, CloudServicesImpl, CloudServicesUpdateDomainImpl, CloudServiceOperatingSystemsImpl } from "./operations";
export class ComputeManagementClient extends coreClient.ServiceClient {
    /**
     * Initializes a new instance of the ComputeManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.
     *                       The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials, subscriptionId, options) {
        var _a, _b;
        if (credentials === undefined) {
            throw new Error("'credentials' cannot be null");
        }
        if (subscriptionId === undefined) {
            throw new Error("'subscriptionId' cannot be null");
        }
        // Initializing default values for options
        if (!options) {
            options = {};
        }
        const defaults = {
            requestContentType: "application/json; charset=utf-8",
            credential: credentials
        };
        const packageDetails = `azsdk-js-arm-compute/19.2.0`;
        const userAgentPrefix = options.userAgentOptions && options.userAgentOptions.userAgentPrefix
            ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`
            : `${packageDetails}`;
        if (!options.credentialScopes) {
            options.credentialScopes = ["https://management.azure.com/.default"];
        }
        const optionsWithDefaults = Object.assign(Object.assign(Object.assign({}, defaults), options), { userAgentOptions: {
                userAgentPrefix
            }, baseUri: (_b = (_a = options.endpoint) !== null && _a !== void 0 ? _a : options.baseUri) !== null && _b !== void 0 ? _b : "https://management.azure.com" });
        super(optionsWithDefaults);
        let bearerTokenAuthenticationPolicyFound = false;
        if ((options === null || options === void 0 ? void 0 : options.pipeline) && options.pipeline.getOrderedPolicies().length > 0) {
            const pipelinePolicies = options.pipeline.getOrderedPolicies();
            bearerTokenAuthenticationPolicyFound = pipelinePolicies.some((pipelinePolicy) => pipelinePolicy.name ===
                coreRestPipeline.bearerTokenAuthenticationPolicyName);
        }
        if (!options ||
            !options.pipeline ||
            options.pipeline.getOrderedPolicies().length == 0 ||
            !bearerTokenAuthenticationPolicyFound) {
            this.pipeline.removePolicy({
                name: coreRestPipeline.bearerTokenAuthenticationPolicyName
            });
            this.pipeline.addPolicy(coreRestPipeline.bearerTokenAuthenticationPolicy({
                credential: credentials,
                scopes: `${optionsWithDefaults.credentialScopes}`,
                challengeCallbacks: {
                    authorizeRequestOnChallenge: coreClient.authorizeRequestOnClaimChallenge
                }
            }));
        }
        // Parameter assignments
        this.subscriptionId = subscriptionId;
        // Assigning values to Constant parameters
        this.$host = options.$host || "https://management.azure.com";
        this.operations = new OperationsImpl(this);
        this.usageOperations = new UsageOperationsImpl(this);
        this.virtualMachineSizes = new VirtualMachineSizesImpl(this);
        this.virtualMachineScaleSets = new VirtualMachineScaleSetsImpl(this);
        this.virtualMachineScaleSetExtensions = new VirtualMachineScaleSetExtensionsImpl(this);
        this.virtualMachineScaleSetRollingUpgrades = new VirtualMachineScaleSetRollingUpgradesImpl(this);
        this.virtualMachineScaleSetVMExtensions = new VirtualMachineScaleSetVMExtensionsImpl(this);
        this.virtualMachineScaleSetVMs = new VirtualMachineScaleSetVMsImpl(this);
        this.virtualMachineExtensions = new VirtualMachineExtensionsImpl(this);
        this.virtualMachines = new VirtualMachinesImpl(this);
        this.virtualMachineImages = new VirtualMachineImagesImpl(this);
        this.virtualMachineImagesEdgeZone = new VirtualMachineImagesEdgeZoneImpl(this);
        this.virtualMachineExtensionImages = new VirtualMachineExtensionImagesImpl(this);
        this.availabilitySets = new AvailabilitySetsImpl(this);
        this.proximityPlacementGroups = new ProximityPlacementGroupsImpl(this);
        this.dedicatedHostGroups = new DedicatedHostGroupsImpl(this);
        this.dedicatedHosts = new DedicatedHostsImpl(this);
        this.sshPublicKeys = new SshPublicKeysImpl(this);
        this.images = new ImagesImpl(this);
        this.restorePointCollections = new RestorePointCollectionsImpl(this);
        this.restorePoints = new RestorePointsImpl(this);
        this.capacityReservationGroups = new CapacityReservationGroupsImpl(this);
        this.capacityReservations = new CapacityReservationsImpl(this);
        this.logAnalytics = new LogAnalyticsImpl(this);
        this.virtualMachineRunCommands = new VirtualMachineRunCommandsImpl(this);
        this.virtualMachineScaleSetVMRunCommands = new VirtualMachineScaleSetVMRunCommandsImpl(this);
        this.disks = new DisksImpl(this);
        this.diskAccesses = new DiskAccessesImpl(this);
        this.diskEncryptionSets = new DiskEncryptionSetsImpl(this);
        this.diskRestorePointOperations = new DiskRestorePointOperationsImpl(this);
        this.snapshots = new SnapshotsImpl(this);
        this.resourceSkus = new ResourceSkusImpl(this);
        this.galleries = new GalleriesImpl(this);
        this.galleryImages = new GalleryImagesImpl(this);
        this.galleryImageVersions = new GalleryImageVersionsImpl(this);
        this.galleryApplications = new GalleryApplicationsImpl(this);
        this.galleryApplicationVersions = new GalleryApplicationVersionsImpl(this);
        this.gallerySharingProfile = new GallerySharingProfileImpl(this);
        this.sharedGalleries = new SharedGalleriesImpl(this);
        this.sharedGalleryImages = new SharedGalleryImagesImpl(this);
        this.sharedGalleryImageVersions = new SharedGalleryImageVersionsImpl(this);
        this.communityGalleries = new CommunityGalleriesImpl(this);
        this.communityGalleryImages = new CommunityGalleryImagesImpl(this);
        this.communityGalleryImageVersions = new CommunityGalleryImageVersionsImpl(this);
        this.cloudServiceRoleInstances = new CloudServiceRoleInstancesImpl(this);
        this.cloudServiceRoles = new CloudServiceRolesImpl(this);
        this.cloudServices = new CloudServicesImpl(this);
        this.cloudServicesUpdateDomain = new CloudServicesUpdateDomainImpl(this);
        this.cloudServiceOperatingSystems = new CloudServiceOperatingSystemsImpl(this);
    }
}
//# sourceMappingURL=computeManagementClient.js.map