/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ComputeManagementClient } from "@azure/arm-compute";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Gets a list of virtual machine image offers for the specified location, edge zone and publisher.
 *
 * @summary Gets a list of virtual machine image offers for the specified location, edge zone and publisher.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/virtualMachineImageExamples/VirtualMachineImagesEdgeZone_ListOffers_MaximumSet_Gen.json
 */
function virtualMachineImagesEdgeZoneListOffersMaximumSetGen() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "{subscription-id}";
        const location = "aaaaaaaaaaaaaaaaaa";
        const edgeZone = "aaaaaaaaaaaaaaaaaaa";
        const publisherName = "aaaaaaaaaaaaa";
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.virtualMachineImagesEdgeZone.listOffers(location, edgeZone, publisherName);
        console.log(result);
    });
}
virtualMachineImagesEdgeZoneListOffersMaximumSetGen().catch(console.error);
/**
 * This sample demonstrates how to Gets a list of virtual machine image offers for the specified location, edge zone and publisher.
 *
 * @summary Gets a list of virtual machine image offers for the specified location, edge zone and publisher.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/virtualMachineImageExamples/VirtualMachineImagesEdgeZone_ListOffers_MinimumSet_Gen.json
 */
function virtualMachineImagesEdgeZoneListOffersMinimumSetGen() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "{subscription-id}";
        const location = "aaaaaaaaaaaaaa";
        const edgeZone = "aaaaaaaaaaaaaaaaaaaaa";
        const publisherName = "aaaaaaaaaaaaaaaaaaaaaaaaaaa";
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.virtualMachineImagesEdgeZone.listOffers(location, edgeZone, publisherName);
        console.log(result);
    });
}
virtualMachineImagesEdgeZoneListOffersMinimumSetGen().catch(console.error);
//# sourceMappingURL=virtualMachineImagesEdgeZoneListOffersSample.js.map