/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ComputeManagementClient } from "@azure/arm-compute";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to The operation to create or update the restore point collection. Please refer to https://aka.ms/RestorePoints for more details. When updating a restore point collection, only tags may be modified.
 *
 * @summary The operation to create or update the restore point collection. Please refer to https://aka.ms/RestorePoints for more details. When updating a restore point collection, only tags may be modified.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/restorePointExamples/RestorePointCollection_CreateOrUpdate_ForCrossRegionCopy.json
 */
function createOrUpdateARestorePointCollectionForCrossRegionCopy() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const restorePointCollectionName = "myRpc";
        const parameters = {
            location: "norwayeast",
            source: {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/restorePointCollections/sourceRpcName"
            },
            tags: { myTag1: "tagValue1" }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.restorePointCollections.createOrUpdate(resourceGroupName, restorePointCollectionName, parameters);
        console.log(result);
    });
}
createOrUpdateARestorePointCollectionForCrossRegionCopy().catch(console.error);
/**
 * This sample demonstrates how to The operation to create or update the restore point collection. Please refer to https://aka.ms/RestorePoints for more details. When updating a restore point collection, only tags may be modified.
 *
 * @summary The operation to create or update the restore point collection. Please refer to https://aka.ms/RestorePoints for more details. When updating a restore point collection, only tags may be modified.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/restorePointExamples/RestorePointCollection_CreateOrUpdate.json
 */
function createOrUpdateARestorePointCollection() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const restorePointCollectionName = "myRpc";
        const parameters = {
            location: "norwayeast",
            source: {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM"
            },
            tags: { myTag1: "tagValue1" }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.restorePointCollections.createOrUpdate(resourceGroupName, restorePointCollectionName, parameters);
        console.log(result);
    });
}
createOrUpdateARestorePointCollection().catch(console.error);
//# sourceMappingURL=restorePointCollectionsCreateOrUpdateSample.js.map