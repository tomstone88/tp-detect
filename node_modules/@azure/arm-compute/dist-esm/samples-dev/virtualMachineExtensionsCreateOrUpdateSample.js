/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ComputeManagementClient } from "@azure/arm-compute";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to The operation to create or update the extension.
 *
 * @summary The operation to create or update the extension.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/virtualMachineExamples/VirtualMachineExtensions_CreateOrUpdate_MaximumSet_Gen.json
 */
function virtualMachineExtensionsCreateOrUpdateMaximumSetGen() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "rgcompute";
        const vmName = "aaaaaaaaaaaaaaaaaaaaaaaa";
        const vmExtensionName = "aaaaaaaaaaaaa";
        const extensionParameters = {
            typePropertiesType: "extType",
            autoUpgradeMinorVersion: true,
            enableAutomaticUpgrade: true,
            forceUpdateTag: "a",
            instanceView: {
                name: "aaaaaaaaaaaaaaaaa",
                type: "aaaaaaaaa",
                statuses: [
                    {
                        code: "aaaaaaaaaaaaaaaaaaaaaaa",
                        displayStatus: "aaaaaa",
                        level: "Info",
                        message: "a",
                        time: new Date("2021-11-30T12:58:26.522Z")
                    }
                ],
                substatuses: [
                    {
                        code: "aaaaaaaaaaaaaaaaaaaaaaa",
                        displayStatus: "aaaaaa",
                        level: "Info",
                        message: "a",
                        time: new Date("2021-11-30T12:58:26.522Z")
                    }
                ],
                typeHandlerVersion: "aaaaaaaaaaaaaaaaaaaaaaaaaa"
            },
            location: "westus",
            protectedSettings: {},
            publisher: "extPublisher",
            settings: {},
            suppressFailures: true,
            tags: { key9183: "aa" },
            typeHandlerVersion: "1.2"
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.virtualMachineExtensions.beginCreateOrUpdateAndWait(resourceGroupName, vmName, vmExtensionName, extensionParameters);
        console.log(result);
    });
}
virtualMachineExtensionsCreateOrUpdateMaximumSetGen().catch(console.error);
/**
 * This sample demonstrates how to The operation to create or update the extension.
 *
 * @summary The operation to create or update the extension.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/virtualMachineExamples/VirtualMachineExtensions_CreateOrUpdate_MinimumSet_Gen.json
 */
function virtualMachineExtensionsCreateOrUpdateMinimumSetGen() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "rgcompute";
        const vmName = "aaaa";
        const vmExtensionName = "aaaaaaaaaaaaaaaaaaaaaaaa";
        const extensionParameters = { location: "westus" };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.virtualMachineExtensions.beginCreateOrUpdateAndWait(resourceGroupName, vmName, vmExtensionName, extensionParameters);
        console.log(result);
    });
}
virtualMachineExtensionsCreateOrUpdateMinimumSetGen().catch(console.error);
//# sourceMappingURL=virtualMachineExtensionsCreateOrUpdateSample.js.map