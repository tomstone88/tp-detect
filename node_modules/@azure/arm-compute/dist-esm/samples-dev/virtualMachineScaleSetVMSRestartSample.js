/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ComputeManagementClient } from "@azure/arm-compute";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Restarts a virtual machine in a VM scale set.
 *
 * @summary Restarts a virtual machine in a VM scale set.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/virtualMachineScaleSetExamples/VirtualMachineScaleSetVMs_Restart_MaximumSet_Gen.json
 */
function virtualMachineScaleSetVMSRestartMaximumSetGen() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "rgcompute";
        const vmScaleSetName = "aa";
        const instanceId = "aaaaaaaaaaaaaaaaa";
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.virtualMachineScaleSetVMs.beginRestartAndWait(resourceGroupName, vmScaleSetName, instanceId);
        console.log(result);
    });
}
virtualMachineScaleSetVMSRestartMaximumSetGen().catch(console.error);
/**
 * This sample demonstrates how to Restarts a virtual machine in a VM scale set.
 *
 * @summary Restarts a virtual machine in a VM scale set.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/virtualMachineScaleSetExamples/VirtualMachineScaleSetVMs_Restart_MinimumSet_Gen.json
 */
function virtualMachineScaleSetVMSRestartMinimumSetGen() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "rgcompute";
        const vmScaleSetName = "aaaaaaaaaaaa";
        const instanceId = "aaaaaa";
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.virtualMachineScaleSetVMs.beginRestartAndWait(resourceGroupName, vmScaleSetName, instanceId);
        console.log(result);
    });
}
virtualMachineScaleSetVMSRestartMinimumSetGen().catch(console.error);
//# sourceMappingURL=virtualMachineScaleSetVMSRestartSample.js.map